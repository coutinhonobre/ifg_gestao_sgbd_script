make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 

# Make data base, printed on Sat May 14 01:59:14 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/coutinho/Downloads/postgresql-8.3.0
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/1j/p9h215hx77g90gcs_b4rzf880000gn/T/vscode-ipc-48192b7e-4b2f-41eb-97d6-2beaff56a8b3.sock
# environment
VSCODE_CWD = /
# environment
PATH = /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/Library/Apple/usr/bin:/Users/coutinho/go/bin:/Users/coutinho/Library/Application Support/cloud-code/installer/google-cloud-sdk/bin:/Users/coutinho/google-cloud-sdk/bin
# environment
GOPATH = /Users/coutinho/go
# environment
LaunchInstanceID = 02B6A00A-3512-4537-AC4B-CE3C6B988FEB
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
CLOUDSDK_METRICS_ENVIRONMENT = cloudcode.vscode
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.i07s3yEFUV/Listeners
# automatic
%F = $(notdir $%)
# environment
CLOUDSDK_METRICS_ENVIRONMENT_VERSION = 1.18.2
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/coutinho/Downloads/postgresql-8.3.0
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/coutinho
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/coutinho/Library/Application Support/Code/CachedData/57fd6d0195bb9b9d1b49f6da5db789060795de47
# environment
LOGNAME = coutinho
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = coutinho
# makefile
.DEFAULT_GOAL := all
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/1j/p9h215hx77g90gcs_b4rzf880000gn/T/
# automatic
 
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/coutinho/Library/Application Support/Code/1.67.0-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.14094947.14094953
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# environment
SECURITYSESSIONID = 186a3
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 435
# variable set hash-table stats:
# Load=67/1024=7%, Rehash=0, Collisions=1/93=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777220, inode 14804553): 16 files, no impossibilities.

# 16 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

maintainer-clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

all:
#  Command-line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := all
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

distclean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
 
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

uninstall:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2007-01-20 15:16:08
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

installcheck:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	
 

installcheck-parallel:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

check:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

installdirs:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

install:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	@if [ ! -f GNUmakefile ] ; then \
	echo "You need to run the 'configure' program first. See the file"; \
	echo "'INSTALL' for installation instructions." ; \
	false ; \
	fi
	@IFS=':' ; \
	for dir in $$PATH; do \
	for prog in gmake gnumake make; do \
	if [ -f $$dir/$$prog ] && ( $$dir/$$prog -f /dev/null --version 2>/dev/null | grep GNU >/dev/null 2>&1 ) ; then \
	GMAKE=$$dir/$$prog; \
	break 2; \
	fi; \
	done; \
	done; \
	\
	if [ x"$${GMAKE+set}" = xset ]; then \
	echo "Using GNU make found at $${GMAKE}"; \
	$${GMAKE} $@ ; \
	else \
	echo "You must use GNU make to build PostgreSQL." ; \
	false; \
	fi
	

# files hash-table stats:
 
# Load=13/1024=1%, Rehash=0, Collisions=1/27=4%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Sat May 14 01:59:14 2022

 
